buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url 'http://maven.oschina.net/content/groups/public/' }
        maven { url 'http://maven.rfdoa.cn/content/groups/public/'}
        maven { url 'https://plugins.gradle.org/m2/'}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE')
        classpath "org.sonarqube.gradle:gradle-sonarqube-plugin:1.1"
    }

}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management'
apply plugin: "org.sonarqube"

jar {
    baseName = 'java-base'
    version = '0.1.1'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'http://maven.oschina.net/content/groups/public/' }
    maven { url 'http://maven.rfdoa.cn/content/groups/public/'}
    maven { url 'https://plugins.gradle.org/m2/'}
    flatDir {
        dirs 'lib'
    }
}

configurations {
    providedRuntime
    driver
}


sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
    }
}
dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-netflix:1.0.7.RELEASE'
    }
}
dependencies {
    compile('org.springframework.boot:spring-boot-starter')
    compile 'org.springframework.cloud:spring-cloud-starter-eureka'

    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')

    compile('org.mybatis:mybatis:3.2.8')
    compile('org.mybatis:mybatis-spring:1.2.2')
    compile('com.alibaba:druid:1.0.14')

    compile('com.github.pagehelper:pagehelper:4.0.1')
    compile('com.github.jsqlparser:jsqlparser:0.9.1')

    compile('org.springframework.boot:spring-boot-starter-web')
    
    compile('org.springframework.boot:spring-boot-starter-jetty')
    compile('org.springframework.boot:spring-boot-starter-actuator')

    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile fileTree(dir:'lib',include:'*.jar')
    
    //compile('javax.validation:validation-api:1.1.0.Final')
    compile('org.hibernate:hibernate-validator:5.1.3.Final')
    compile('com.alibaba:fastjson:1.1.41')

    compile('mysql:mysql-connector-java:5.1.24')
    compile('mysql:mysql-connector-java:5.1.24')
    compile('org.apache.commons:commons-lang3:3.3.2')
	compile('com.google.guava:guava:17.0')

    compile('com.h2database:h2:1.4.190')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile("junit:junit")


}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.8'
}
